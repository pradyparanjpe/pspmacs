#+title: README
#+PROPERTY: header-args :tangle t :mkdirp t :results no
#+auto_tangle: t
#+export_file_name: index.html

* Pages
- All /Org/ files in [[https://gitlab.com/pradyparanjpe/pspmacs][this project]] are published in [[https://docs.readthedocs.io/en/stable/][read-the-docs]] format using [[https://github.com/fniessen/org-html-themes][fniessen/org-html-themes/readtheorg]] at [[https://pradyparanjpe.gitlab.io/pspmacs/index.html][gitlab-pages]].

* Introduction
#+begin_seealso
file:ACKNOWLEDGEMENTS.org
#+end_seealso

I was a SpaceMacs user for more than 2 years before [[https://github.com/syl20bnr/spacemacs/issues/15667][this]] issue landed.
It was high time I became independent of opinionated Emacs configurations, especially because it seriously affected my python programming workflow.

** /BAD/ Opinionated
I didn't like doom-emacs for a similar reason.
Dependence on either of them forces one to rely on /another layer of commits/ being flawless in addition to Gnu Emacs' production commits and installed Emacs-lisp packages.
Further, opinionated configuration imposes restrictions.
Downstream modification of template opinions break (as they *did* for me) when the upstream code gets some incompatible commits.

* My Attempt
This is my *hitherto successful* attempt at configuring Emacs (v29 and master-branch) from scratch to use it as a /text editor/ (ðŸ¤£).

** OPTION 1: Copy Configuration
To copy /PSPMacs/ configuration (=POSIX=),
- Download [[https://gitlab.com/pradyparanjpe/pspmacs/-/raw/master/aid/setup-pspmacs.sh?inline=false][setup-pspmacs.sh]], which is exported from [[file:aid/setup-pspmacs.org]].
- Run it using a =POSIX= shell
#+begin_src bash :tangle no
  sh setup-pspmacs.sh
#+end_src

#+begin_tip
If =curl= is already installed (generally =TRUE=), this may be automated by the terminal command:
#+begin_src bash :tangle no
  curl -fsSL "https://gitlab.com/pradyparanjpe/pspmacs/-/raw/master/aid/setup-pspmacs.sh" | sh
#+end_src
#+end_tip

#+begin_warning
- The script has been tested only with
  1. =Alpine Linux= (/This damn CI-CD pipeline/)
  2. =MacOS Ventura= (dependencies were pre-installed.)
#+end_warning

#+begin_danger
Do *NOT* run setup-script with =sudo= privileges.
The *script* will invoke =sudo= privileges whenever necessary.
#+end_danger

** OPTION 2: Copy manually
- Read and understand this README.
- Ensure that [[*Requirements][requirements]] are installed.
- Define =LOCAL_EMACS_HOME=, =PVT_EMACS_HOME= in suitable =.rc= profile.
  - If you also use [[https://pradyparanjpe.github.io/runcom][my runcom]], define it in =~/.config/local.d/.emacsrc=
- Back up =~/.emacs.d= somewhere.
- Clone *this* [[https://gitlab.com/pradyparanjpe/pspmacs.git][repository]] at =~/.emacs.d= or link it.
- Understand and follow the =elisp= code below.
  #+begin_src emacs-lisp :tangle no
    (require 'perseverance)
    (while t
      (troubleshoot))
  #+end_src

** Requirements
Bare Minimal Dependencies: (the installation script tries to install them.)
- git (version control)
- curl (downloads)
- npm (language servers)
- ripgrep (Better, faster, broader grep)
- Nerd Fonts (fancy StartPage, Mode-line)
- Emacs (Well, obviously.)

* Inheritance principle
- The configuration is made with three *inherited work-trees*.
- Each file in this configuration (other than some obvious documented exceptions) calls a function [[file:late/index.org::*Org mode auto-load][pspmacs/load-inherit]] at the end.
  This function ensures the following.

** Inherited work-trees
*** Global: =user-emacs-directory=
- This is the default Emacs directory [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Find-Init.html][conventionally located]] at =~/.emacs.d=.
  However, *this damn* configuration is meant to occupy that location.
  Since this configuration is git-version-controlled, any changes in =~/.emacs.d= may cause commit-conflicts.
  Hence, we try to put *nothing* more in this location than what it already contains.
- For Emacs 28, [[https://github.com/plexus/chemacs2][chemacs2]] may occupy =~/.emacs.d= and redirect to /this/ configuration.
  - Since Emacs 29, /this/ directory may be specified from the command-line with the flag =--init-directory=.

*** Private: =pvt-emacs-dir=
- A user may want to make some over-writing changes (supersede) and need to synchronize them across a private /ecosystem/ using a private version-control repository.
  Such changes should be placed in 'exactly the same location' as that of the file to be superseded, but relative to a separate location, =pvt-emacs-dir=.
- They may include settings such as full-name, email, etc.
- The value of this variable is learnt from the environment variable =PVT_EMACS_HOME=.
  #+begin_warning
  - When version-controlling =pvt-emacs-dir=, add =local.d= to its =.gitignore=.
  - Don't make such repository public.
  #+end_warning

*** Local: =local-emacs-dir=
- Local changes, cache, etc. cannot be synchronized even across a private ecosystem.
  Such changes should be placed in 'exactly the same location' as that of the file to be superseded, but relative to a separate location, =local-emacs-dir=.
- They may include settings based on screen-size, local caches, etc.
- The value of this variable is learnt from the environment variable =LOCAL_EMACS_HOME=.
  - If =LOCAL_EMACS_HOME= is not set, =PVT_EMACS_HOME/local.d= is used when =PVT_EMACS_HOME= is defined, else =USER_EMACS_HOME/local.d= is used.
  #+begin_warning
  - Don't synchronize local.d.
  #+end_warning

** [[https://www.gnu.org/software/emacs/manual/html_node/emacs/Init-File.html][Load-order]]
- Emacs loads =<user-emacs-directory>/site-start.el= which is site-specific.
  This may be overridden while launching Emacs using the command-line flag =--no-site-file=.
  We shall not synchronize it across machines.
- Emacs loads configuration in =<user-emacs-directory>/early-init.el= before launching the GUI, and =<user-emacs-directory>/init.el= after.
  This configuration redirects it to load various files located in the =user-emacs-directory= work-tree.
  Each file performs its configuration settings and looks for a file located at the same location relative to =pvt-emacs-dir= and then, =local-emacs-dir=.
  If such a file exists, it is loaded.
- Example, the file =<user-emacs-directory>/late/definitions.el= attempts to load files =<pvt-emacs-dir>/late/definitions.el= and =<local-emacs-dir>/late/definitions.el=.
  If they exist, they can overwrite configuration applied by the =<user-emacs-directory>/late/definitions.el=.
#+begin_tip
- =pvt-emacs-dir>/<filename>.{el,org}= and =local-emacs-dir>/<filename>.{el,org}= may be thought as if they were sequential /after-config-hooks/ of =<user-emacs-directory>/<filename>.{el,org}=
- The user is advised to place in private and local work-trees, code cognate to the corresponding file in the global work-tree.
#+end_tip

- Emacs loads =<user-emacs-directory>/default.el=, which defines site-specific defaults, only if =inhibit-default-init= is =nil=.
  We shall not synchronize it across machines.

** [[file:early/index.org][early-init.el]]
- This init should *NEVER* throw errors.
- If error is encountered, Emacs never launches GUI and exits with error.
- Since we won't use built-in org-mode, we shall refrain from using the function ~org-babel-load-file~
#+begin_tip
- This section only establishes a platform for configuration and doesn't in fact affect the final configuration outcome.
  - Many settings in =early-init= may be over-written by *this damn config* during /late/ init.
#+end_tip

#+begin_warning
- Any privately synchronized or locally determined over-writing configuration *may not* throw errors.
- Any privately synchronized or locally determined over-writing configuration *may not* use org-mode or its derived functions.
#+end_warning

- Code
  - Each section of =early-init=, /viz/. =prune=, =definitions=, =init=, =config= is maintained separately in the directory =early=.
 #+begin_src emacs-lisp :tangle early-init.el
   ;;; early-init.el --- Early Emacs init -*- lexical-binding: t; no-byte-compile: t; -*-
   ;;; Early definitions init configs
   (load (expand-file-name "early/prune.el" user-emacs-directory)
         nil 'nomessage)

   (load (expand-file-name "early/definitions.el" user-emacs-directory)
         nil 'nomessage)

   (load (expand-file-name "early/init.el" user-emacs-directory)
         nil 'nomessage)

   (load (expand-file-name "early/config.el" user-emacs-directory)
         nil 'nomessage)
#+end_src

** [[file:late/index.org][init.el]]
- Errors thrown by this section accumulate in =*Messages*= buffer.
- Each section of =late-init=, /viz/. =package-management=, =definitions=, =init=, =config= is maintained separately in the directory =late=.
#+begin_warning
- Any privately synchronized or locally determined over-writing configuration *may* use org-mode or its derived functions only in files =late/init.el= and =late/config.el=.
#+end_warning

- Code
  - =late/init.el= loads the correct =org-mode= (latest version) and uses ~org-babel-load-file~ to load each file in =modules=.
  - The customization file =<local-emacs-dir>/custom.el= will only be loaded after `config.el' only if the value of `pspmacs/load-custom-file' is set to a non-nil.
#+begin_src emacs-lisp :tangle init.el
  ;;; init.el --- Late Emacs init -*- lexical-binding: t; no-byte-compile: t; -*-
  ;;; late definitions init configs
  (load (expand-file-name "late/package-management.el" user-emacs-directory)
        nil 'nomessage)

  (load (expand-file-name "late/definitions.el" user-emacs-directory)
        nil 'nomessage)

  (load (expand-file-name "late/init.el" user-emacs-directory)
        nil 'nomessage)

  (load (expand-file-name "late/config.el" user-emacs-directory)
        nil 'nomessage)

  (when pspmacs/load-custom-file
    (load custom-file t))
#+end_src

** [[file:pspack/pspack.org][pspack]]
- Functions, variables, faces, keywords used by /PSPMacs/ are compiled in a package pspack.

* .gitignore
- Remember to add =local.d/= to =pvt-emacs-dir/.gitignore=, since it may be used as =local-emacs-dir=.
- As a good practice, packages should store cache files at the location returned by the function ~(locate-user-emacs-file NEW-NAME)~, which has been overloaded in =late/xdg.el= to point at =xdg/emacs-cache-directory=.
  - However, if they store them at the hard-coded location =user-emacs-home/NEW-NAME=, =NEW-NAME= needs to be added to =pspmacs/.gitignore=.
    I shall do so whenever I notice such incidences either myself or through an issue.

* [[file:sitemap.org][Sitemap]]
