#+title: PSPMacs/common
#+property: header-args :tangle common.el :mkdirp t :results no :eval never
#+auto_tangle: t

* Header
#+begin_src emacs-lisp
  ;;; common.el --- common objects -*- lexical-binding: t; -*-
  ;;; Commentary:
  ;;
  ;; COMMON ModeLine for Emacs
  ;;
  ;;; Code:
#+end_src

* Truncate strings
#+begin_src emacs-lisp
  (defcustom pspmacs/long-str-ellipses
    "â€¦"
    "Character(s) that indicates that the name was trimmed"
    :type '(string)
    :group 'pspmacs)

  (defun pspmacs/shorten-it (long-str shorten-to &optional ellipses)
    "Shorten string

    If LONG-STR is longer than SHORTEN-TO, then, shorten it by inserting ELLIPSES"
    (cond ((stringp long-str)
           (let* ((buffer-mid (/ (length long-str) 2))
                  (ellipses (or ellipses pspmacs/long-str-ellipses))
                  (buffer-cut
                   (+ (- buffer-mid (/ shorten-to 2)) (/ (length ellipses) 2) 1)))
             (if (cl-plusp buffer-cut)
                 (concat (substring long-str 0 (- buffer-mid buffer-cut))
                         ellipses
                         (substring long-str (+ buffer-mid buffer-cut)))
               long-str)))
          ((sequencep long-str)
           (mapcar (lambda (x)
                     (pspmacs/shorten-it x shorten-to))
                   long-str))
          ((symbolp long-str)
           (pspmacs/shorten-it (symbol-name long-str) shorten-to))))
#+end_src


* Footer
#+begin_src emacs-lisp
  (provide 'pspmacs/common)
  ;;; common.el ends there
#+end_src
